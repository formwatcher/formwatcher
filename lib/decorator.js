// Generated by CoffeeScript 1.4.0
(function() {
  var Decorator, InputWatcher,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  InputWatcher = require("./input-watcher");

  Decorator = (function(_super) {

    __extends(Decorator, _super);

    function Decorator() {
      return Decorator.__super__.constructor.apply(this, arguments);
    }

    Decorator.prototype.decorate = function(watcher, input) {
      return {
        input: input
      };
    };

    return Decorator;

  })(InputWatcher);

  module.exports = Decorator;

}).call(this);
