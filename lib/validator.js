// Generated by CoffeeScript 1.4.0
(function() {
  var InputWatcher, Validator,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  InputWatcher = require("./input-watcher");

  Validator = (function(_super) {

    __extends(Validator, _super);

    function Validator() {
      return Validator.__super__.constructor.apply(this, arguments);
    }

    Validator.prototype.nodeNames = ["INPUT", "TEXTAREA", "SELECT"];

    Validator.prototype.validate = function(value, input) {
      return true;
    };

    Validator.prototype.sanitize = function(value) {
      return value;
    };

    Validator.prototype.format = function(value) {
      var sanitizedValue;
      sanitizedValue = this.sanitize(value);
      if ((sanitizedValue !== sanitizedValue) || !sanitizedValue) {
        return "";
      } else {
        return "" + sanitizedValue;
      }
    };

    return Validator;

  })(InputWatcher);

  module.exports = Validator;

}).call(this);
